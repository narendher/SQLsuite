/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModifyPanel.java
 *
 * Created on Mar 8, 2012, 5:47:23 PM
 */
package sqlsuite;
import java.lang.String;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Administrator
 */
public class ModifyPanel extends javax.swing.JPanel {
    public ResultSetMetaData rsmd;
    public int col=0;
    public String data2[][];
    /** Creates new form ModifyPanel */
    public ModifyPanel() {
        initComponents();
        String name=StaticData.tablename_mod;
        //setLocationRelativeTo(null);
        insertIntoTable(name);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_saveChanges = new javax.swing.JButton();
        jB_closeTab = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 36));
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("SQL SUITE FOR ORACLE");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102), null, new java.awt.Color(0, 102, 102)));
        add(jLabel1);
        jLabel1.setBounds(260, 40, 466, 57);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(220, 160, 590, 360);

        jButton_saveChanges.setFont(new java.awt.Font("Dialog", 1, 14));
        jButton_saveChanges.setForeground(new java.awt.Color(102, 0, 102));
        jButton_saveChanges.setText("Save Changes");
        jButton_saveChanges.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 102)));
        jButton_saveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveChangesActionPerformed(evt);
            }
        });
        add(jButton_saveChanges);
        jButton_saveChanges.setBounds(440, 550, 150, 46);

        jB_closeTab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sqlsuite/cross.jpg"))); // NOI18N
        jB_closeTab.setToolTipText("Close Tab");
        jB_closeTab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jB_closeTabActionPerformed(evt);
            }
        });
        add(jB_closeTab);
        jB_closeTab.setBounds(880, 50, 30, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sqlsuite/powerpoint-curve-background.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1010, 680);
    }// </editor-fold>//GEN-END:initComponents

private void jButton_saveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_saveChangesActionPerformed
         // TODO add your handling code here:
        int confirm=JOptionPane.showConfirmDialog(null,"Are you sure You want to make the changes permanent on to the table?","Message",JOptionPane.YES_NO_OPTION);
        if(confirm==0)
        {     
             ((DefaultTableModel)jTable1.getModel()).fireTableDataChanged();
             String str2="delete from "+StaticData.tablename_mod+";";
             EstablishConnection.connec(str2);
             int rowcount=((DefaultTableModel)jTable1.getModel()).getRowCount();
             int colcount=((DefaultTableModel)jTable1.getModel()).getColumnCount();
             int numb[]=new int[rowcount];
             int t=0;
             for(int i=0;i<rowcount;i++)
             {
                 numb[i]=0;
                 String str="insert into "+StaticData.tablename_mod+" values(";
                 for(int j=0;j<colcount;j++)
                 {                     
                     if(StaticData.columntype[j].equals("DECIMAL"))
                     {
                         str+=""+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+",";
                     }
                     else
                     {
                         str+="'"+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+"',";
                     }
                 }
                 str=str.substring(0,str.length()-1);
                 str+=");";
                 System.out.println("string"+str);
                 int e=EstablishConnection.connec(str);
                 if(e==0)
                 {
                     String str3="insert into "+StaticData.tablename_mod+" values(";
                     for(int j=0;j<colcount;j++)
                     {  
                         if(StaticData.columntype[j].equals("DECIMAL"))
                         {
                             str3+=""+data2[i][j];
                             //str+=""+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+",";
                         }
                         else
                         {
                             str3+="'"+data2[i][j]+"'";
                             //str+="'"+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+"',";
                         }
                    }
                     str3=str3.substring(0,str3.length()-1);
                 str3+=");";
                     EstablishConnection.connec(str3);
                     numb[i]=1;
                     t++;
                 }
             }
                JOptionPane.showMessageDialog(null,"Table Updated");
                //dispose();
                //new MenuWindowFrame().setVisible(true);
            MainWindowClass.jTabbedPane_view.remove(MainWindowClass.tabmod);
            MainWindowClass.jTabbedPane_view.add(new SelectTablePanel_Modify(),MainWindowClass.tabmod);
            MainWindowClass.jTabbedPane_view.setTitleAt(MainWindowClass.tabmod,"Modify");
            MainWindowClass.jTabbedPane_view.setSelectedIndex(MainWindowClass.tabmod);
//             if(t>0)
//             {
//                 JOptionPane.showMessageDialog(null,"The Error rows Are displayed now: Please make them corect");
//                 for(int i=0;i<rowcount;i++)
//                 {
//                     if(numb[i]==0)
//                     ((DefaultTableModel)jTable1.getModel()).removeRow(i);
//                 }
//             }
//             for(int i=0;i<rowcount;i++)
//             {
//                 if(numb[i]==1)
//                 jTable1.setRowSelectionInterval(i,i);
//                
//             }
//              JOptionPane.showMessageDialog(null,"The selected rows are not updated");
         }
        else
        {
            return;
        }        
}//GEN-LAST:event_jButton_saveChangesActionPerformed

private void jB_closeTabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jB_closeTabActionPerformed
int confirm=JOptionPane.showConfirmDialog(null,"Are you sure to close this tab?","Message",JOptionPane.YES_NO_OPTION);
//int confirm=JOptionPane.showConfirmDialog(null, "Error is here", "Error", YES, WIDTH)       
if(confirm==0)
         {
                MainWindowClass.jTabbedPane_view.remove(MainWindowClass.tabmod);
                MainWindowClass.mod="close";
                //MainWindowClass.jTabbedPane_view.
                MyUtilities.closeTab(MainWindowClass.tabmod);
         }
}//GEN-LAST:event_jB_closeTabActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jB_closeTab;
    private javax.swing.JButton jButton_saveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void insertIntoTable(String insertTableName) {
        try 
            {
                String qry = "select * from "+insertTableName;
                ResultSet rs=EstablishConnection.executeQuery(qry);
                rsmd =rs.getMetaData();
                int columnCount = rsmd.getColumnCount();
                int rowcount=0;
                for(int i=1,t=0;i<=columnCount;i++,t++)
                {
                        StaticData.columntype[t]=rsmd.getColumnTypeName(i);
                        //System.out.println(StaticData.columntype[i]);
                        String value=rsmd.getColumnName(i);
//                        if(rsmd.getColumnTypeName(i).equals("DECIMAL"))
//                        {
//                            value+="(Number)";
//                        }
//                        else
//                        {
//                            value+="(String)";
//                        }
                        ((DefaultTableModel)jTable1.getModel()).addColumn(value);
//                        if(rsmd.getColumnTypeName(i).equals("DECIMAL"))
//                        {
//                            ((DefaultTableModel)jTable1.getModel()).
//                        }
                        //((DefaultTableModel)jTable1.getModel()).
                }
                
                String data[]=new String[columnCount];
                while(rs.next())
                { 
                   for(int i=1,t=0;i<=columnCount;i++,t++)
                   {
                          data[t]=rs.getString(i);
                          System.out.println("zxdf:"+data[t]);
                         
                   }                   
                   rowcount++;
                   ((DefaultTableModel)jTable1.getModel()).addRow((Object[])data);
                }
                String data2[][]=new String[rowcount][columnCount];
                ResultSet rs2=EstablishConnection.executeQuery(qry);
                int i=0;
                while(rs.next())
                {
                    i++;
                    for(int j=1,t=0;j<=columnCount;j++,t++)
                    {
                        data2[i][t]=rs2.getString(j);
                        System.out.println("data:"+data2[i][t]);
                    }
                }
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(ModifyFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}
