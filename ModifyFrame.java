/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ModifyFrame.java
 *
 * Created on Feb 19, 2012, 8:39:01 PM
 */
package sqlsuite;

import java.lang.String;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ModifyFrame extends javax.swing.JFrame {
    public ResultSetMetaData rsmd;
    public int col=0;
    public String data2[][];
    /** Creates new form ModifyFrame */
    public ModifyFrame() {
        initComponents();
        String name=StaticData.tablename;
        setLocationRelativeTo(null);
        insertIntoTable(name);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton_saveChanges = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("ModifyFrame");
        setMinimumSize(new java.awt.Dimension(560, 560));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(80, 130, 412, 282);

        jButton_saveChanges.setFont(new java.awt.Font("Dialog", 1, 14));
        jButton_saveChanges.setForeground(new java.awt.Color(102, 0, 102));
        jButton_saveChanges.setText("Save Changes");
        jButton_saveChanges.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 0, 102)));
        jButton_saveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveChangesActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_saveChanges);
        jButton_saveChanges.setBounds(210, 420, 150, 46);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 3, 36));
        jLabel1.setForeground(new java.awt.Color(0, 51, 51));
        jLabel1.setText("SQL SUITE FOR ORACLE");
        jLabel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102), null, new java.awt.Color(0, 102, 102)));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(60, 30, 466, 57);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sqlsuite/powerpoint-curve-background.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setBorder(javax.swing.BorderFactory.createMatteBorder(6, 6, 6, 6, new java.awt.Color(102, 0, 102)));
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 580, 480);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_saveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_saveChangesActionPerformed
         // TODO add your handling code here:
        int confirm=JOptionPane.showConfirmDialog(null,"Are you sure You want to make the changes permanent on to the table?","Message",JOptionPane.YES_NO_OPTION);
        if(confirm==0)
        {     
             ((DefaultTableModel)jTable1.getModel()).fireTableDataChanged();
             String str2="delete from "+StaticData.tablename+";";
             EstablishConnection.connec(str2);
             int rowcount=((DefaultTableModel)jTable1.getModel()).getRowCount();
             int colcount=((DefaultTableModel)jTable1.getModel()).getColumnCount();
             int numb[]=new int[rowcount];
             int t=0;
             for(int i=0;i<rowcount;i++)
             {
                 numb[i]=0;
                 String str="insert into "+StaticData.tablename+" values(";
                 for(int j=0;j<colcount;j++)
                 {                     
                     if(StaticData.columntype[j].equals("DECIMAL"))
                     {
                         str+=""+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+",";
                     }
                     else
                     {
                         str+="'"+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+"',";
                     }
                 }
                 str=str.substring(0,str.length()-1);
                 str+=");";
                 System.out.println("string"+str);
                 int e=EstablishConnection.connec(str);
                 if(e==0)
                 {
                     String str3="insert into "+StaticData.tablename+" values(";
                     for(int j=0;j<colcount;j++)
                     {  
                         if(StaticData.columntype[j].equals("DECIMAL"))
                         {
                             str3+=""+data2[i][j];
                             //str+=""+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+",";
                         }
                         else
                         {
                             str3+="'"+data2[i][j]+"'";
                             //str+="'"+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+"',";
                         }
                    }
                     str3=str3.substring(0,str3.length()-1);
                 str3+=");";
                     EstablishConnection.connec(str3);
                     numb[i]=1;
                     t++;
                 }
             }
                JOptionPane.showMessageDialog(null,"Table Updated");
                dispose();
                new MenuWindowFrame().setVisible(true);
             
//             if(t>0)
//             {
//                 JOptionPane.showMessageDialog(null,"The Error rows Are displayed now: Please make them corect");
//                 for(int i=0;i<rowcount;i++)
//                 {
//                     if(numb[i]==0)
//                     ((DefaultTableModel)jTable1.getModel()).removeRow(i);
//                 }
//             }
//             for(int i=0;i<rowcount;i++)
//             {
//                 if(numb[i]==1)
//                 jTable1.setRowSelectionInterval(i,i);
//                
//             }
//              JOptionPane.showMessageDialog(null,"The selected rows are not updated");
         }
        else
        {
            return;
        }        
    }//GEN-LAST:event_jButton_saveChangesActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        int confirm=JOptionPane.showConfirmDialog(null,"Are you sure to Quit without saving?","Message",JOptionPane.YES_NO_OPTION);
        if(confirm==0)
        {            
//             int rowcount=((DefaultTableModel)jTable1.getModel()).getRowCount();
//             int colcount=((DefaultTableModel)jTable1.getModel()).getColumnCount();
//             for(int i=0;i<rowcount;i++)
//             {
//                     String str3="insert into "+StaticData.tablename+" values(";
//                     for(int j=0;j<colcount;j++)
//                     {  
//                         if(StaticData.columntype[j].equals("DECIMAL"))
//                         {
//                             str3+=""+data2[i][j];
//                             //str+=""+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+",";
//                         }
//                         else
//                         {
//                             str3+="'"+data2[i][j]+"'";
//                             //str+="'"+((DefaultTableModel)jTable1.getModel()).getValueAt(i,j)+"',";
//                         }
//                    }
//                     str3=str3.substring(0,str3.length()-1);
//                     str3+=");";
//                     EstablishConnection.connec(str3);
////                     numb[i]=1;
////                     t++;
//              }
                dispose();
                new MenuWindowFrame().setVisible(true);
        }
        else
            return;
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new ModifyFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_saveChanges;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

//    public Class getColumnClass(int col) {  
//        for(int l=0;l<StaticData.columntype.length;l++)
//        {
//        if("DECIMAL".equals(StaticData.columntype[l]))       //second column accepts only Integer values  
//            return Integer.class;  
//        else 
//            return String.class;
//        }
//        //return Integer.class;
//    }
    private void insertIntoTable(String insertTableName) {
            try 
            {
                String qry = "select * from "+insertTableName;
                ResultSet rs=EstablishConnection.executeQuery(qry);
                rsmd =rs.getMetaData();
                int columnCount = rsmd.getColumnCount();
                int rowcount=0;
                for(int i=1,t=0;i<=columnCount;i++,t++)
                {
                        StaticData.columntype[t]=rsmd.getColumnTypeName(i);
                        //System.out.println(StaticData.columntype[i]);
                        String value=rsmd.getColumnName(i);
                        if(rsmd.getColumnTypeName(i).equals("DECIMAL"))
                        {
                            value+="(Number)";
                        }
                        else
                        {
                            value+="(String)";
                        }
                        ((DefaultTableModel)jTable1.getModel()).addColumn(value);
//                        if(rsmd.getColumnTypeName(i).equals("DECIMAL"))
//                        {
//                            ((DefaultTableModel)jTable1.getModel()).
//                        }
                        //((DefaultTableModel)jTable1.getModel()).
                }
                
                String data[]=new String[columnCount];
                while(rs.next())
                { 
                   for(int i=1,t=0;i<=columnCount;i++,t++)
                   {
                          data[t]=rs.getString(i);
                          System.out.println("zxdf:"+data[t]);
                         
                   }                   
                   rowcount++;
                   ((DefaultTableModel)jTable1.getModel()).addRow((Object[])data);
                }
                String data2[][]=new String[rowcount][columnCount];
                ResultSet rs2=EstablishConnection.executeQuery(qry);
                int i=0;
                while(rs.next())
                {
                    i++;
                    for(int j=1,t=0;j<=columnCount;j++,t++)
                    {
                        data2[i][t]=rs2.getString(j);
                        System.out.println("data:"+data2[i][t]);
                    }
                }
                
            }
            catch (SQLException ex) 
            {
                Logger.getLogger(ModifyFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
}
